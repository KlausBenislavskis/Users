### Variables
@baseUrl = http://localhost:5172
@userId = {{createUser.response.body.id}}

### Create a new user
# @name createUser
POST {{baseUrl}}/api/users
Content-Type: application/json

{
  "username": "klavsb",
  "email": "klavs@example.com",
  "firstName": "Klavs",
  "lastName": "Benislavskis",
  "dateOfBirth": "2001-09-26T00:00:00Z"
}

### Create another user
POST {{baseUrl}}/api/users
Content-Type: application/json

{
  "username": "janedoe",
  "email": "jane@example.com",
  "firstName": "Jane",
  "lastName": "Doe",
  "dateOfBirth": "1992-03-20T00:00:00Z"
}

### Get user by ID (replace with actual ID from create response)
GET {{baseUrl}}/api/users/00000000-0000-0000-0000-000000000000

### Get user by ID (using variable from createUser response)
GET {{baseUrl}}/api/users/{{userId}}

### Test - User not found
GET {{baseUrl}}/api/users/11111111-1111-1111-1111-111111111111

### Test - Invalid email (validation should fail)
POST {{baseUrl}}/api/users
Content-Type: application/json

{
  "username": "baduser",
  "email": "not-an-email",
  "firstName": "Bad",
  "lastName": "User",
  "dateOfBirth": "1990-01-15T00:00:00Z"
}

### Test - Username too short (validation should fail)
POST {{baseUrl}}/api/users
Content-Type: application/json

{
  "username": "ab",
  "email": "test@example.com",
  "firstName": "Test",
  "lastName": "User",
  "dateOfBirth": "1990-01-15T00:00:00Z"
}

### Test - Future birth date (validation should fail)
POST {{baseUrl}}/api/users
Content-Type: application/json

{
  "username": "timetravel",
  "email": "future@example.com",
  "firstName": "Future",
  "lastName": "Person",
  "dateOfBirth": "2030-01-15T00:00:00Z"
}
